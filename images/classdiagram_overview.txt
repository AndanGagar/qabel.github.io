@startuml
package config {
	class Settings {

	}
	Settings --- SyncedSettings
	LocalSettings --- Settings
	abstract AbstractModuleSettings {

	}
	abstract LocalModuleSettings {

	}
	abstract SyncedModuleSettings {

	}

	class LocalSettings {
		poll_interval : long
		poll_interval_wlan : long
		poll_interval_mobile : long
		last_update : Date
	}
	class SyncedSettings {
		uploads : uploads
		identities : identities
	}

	LocalSettings *-- LocalModuleSettings
	SyncedSettings *-- SyncedModuleSettings
	AbstractModuleSettings <-- LocalModuleSettings
	AbstractModuleSettings <-- SyncedModuleSettings

	class Account {
		id: int
		updated: int
		created: int
		deleted: int
		provider : String
		user : String
		auth : String
	}
	class Accounts { }
	Accounts *-- Account
	SyncedSettings --- Accounts

	class DropServer {
		id: int
		updated: int
		created: int
		deleted: int
		url : URL
		auth : String
		active : bool
		websockets : bool
		poll_interval : long
	}
	DropServers *-- DropServer
	SyncedSettings --- DropServers

	class StorageVolume {
		id: int
		updated: int
		created: int
		deleted: int
		server : String
		port : int
		path : String
		auth : String
	}
	class StorageVolumes { }
	StorageVolumes --- StorageVolume
	SyncedSettings *-- StorageVolumes

	class Upload {
		id: int
		updated: int
		created: int
		deleted: int
		block_server_id : int
		public : String
		token : String
		revoke_token: String
	}
	Class Uploads { }
	Uploads *-- Upload
	SyncedSettings --- Uploads

	class Identity {
		id: int
		updated: int
		created: int
		deleted: int
		alias : String
		private_key : String
		inbox : String
	}
	class Identities { }
	Identities *-- Identity
	SyncedSettings *-- Identities
}
package model {
	abstract ModelObject {

	}

	class DropMessage {

	}

	class StorageBlob {

	}
}
package controller {
	class DropController {
		registerListener(ModelObject.class, DropServerListener)
		unregisterListener(DropServerListener)
	}
	DropServerController --- ModelObject
	interface DropListener {

	}
	DropServerListener *-- DropServerController
	StorageController --- StorageVolumes
	class StorageController {
		
	}
	class StorageConnection {

	}
	interface StorageResponseListener {
		onResponse(StorageConnection, StorageBlob)
	}
	StorageConnection --- StorageResponseListener
	StorageController *-- StorageConnection
	StorageBlob --- StorageConnection
}
@enduml
